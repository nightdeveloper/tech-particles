{"componentChunkName":"component---src-templates-docs-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Tech Particles: Raspberry","docsLocation":""}},"mdx":{"fields":{"id":"92cd72f2-082d-5a1f-9044-1f6d861f2296","title":"Introduction","slug":"/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Introduction\",\n  \"metaTitle\": \"\",\n  \"metaDescription\": \"\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/tech-particles/images/logo.png\",\n    \"alt\": \"Logo\",\n    \"title\": \"Logo\"\n  }))), mdx(\"p\", null, \"Raspberry Pi cheat lists, guides, samples and hints to go.\"), mdx(\"p\", null, \"Copyright (c) 2020\"), mdx(\"p\", null, \"Permission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\"), mdx(\"p\", null, \"The above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\"), mdx(\"p\", null, \"THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\"), mdx(\"p\", null, \"Todo:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bcm2835-wdt watchdog\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"parent":{"__typename":"File","relativePath":"index.md"},"frontmatter":{"metaTitle":"","metaDescription":""}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/create-service","title":"Creating Service"}}},{"node":{"fields":{"slug":"/camera","title":"Camera"}}},{"node":{"fields":{"slug":"/diagnostic","title":"Basic Diagnostic"}}},{"node":{"fields":{"slug":"/i2c","title":"I2C Config"}}},{"node":{"fields":{"slug":"/https","title":"HTTPS with let's encrypt"}}},{"node":{"fields":{"slug":"/python","title":"Python Commons"}}},{"node":{"fields":{"slug":"/init","title":"Init Settings"}}},{"node":{"fields":{"slug":"/","title":"Introduction"}}},{"node":{"fields":{"slug":"/specifications","title":"Latest Raspberry Pi Specifications"}}},{"node":{"fields":{"slug":"/ssh-keys","title":"Using SSH keys"}}},{"node":{"fields":{"slug":"/system-on-usb","title":"Booting images from usb"}}},{"node":{"fields":{"slug":"/useful-commands","title":"Useful commands"}}},{"node":{"fields":{"slug":"/wifi","title":"Wi-fi"}}}]}},"pageContext":{"id":"92cd72f2-082d-5a1f-9044-1f6d861f2296"}}}