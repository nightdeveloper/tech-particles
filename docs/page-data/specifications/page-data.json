{"componentChunkName":"component---src-templates-docs-js","path":"/specifications","result":{"data":{"site":{"siteMetadata":{"title":"Tech Particles: Raspberry","docsLocation":""}},"mdx":{"fields":{"id":"3b8de651-34a2-57c0-853b-81cbd03530b8","title":"Latest Raspberry Pi Specifications","slug":"/specifications"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Latest Raspberry Pi Specifications\",\n  \"metaTitle\": \"\",\n  \"metaDescription\": \"\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"th\"\n  }, \"Spec / Model\")), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"th\"\n  }, \"Raspberry Pi Zero W\")), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"th\"\n  }, \"Raspberry Pi 3b+\")), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"th\"\n  }, \"Raspberry Pi 4b\")))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Dimensions,\\nweight\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"66mm x 30mm\\nx 5.4mm, 9g\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"85mm x 56\\u2009mm\\nx 17mm, 50g\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"88\\u2009mm x 58\\u2009mm\\nx 19.5\\u2009mm, 46\\u2009g\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"SoC\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Broadcom BCM2835\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Broadcom BCM2837B0\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Broadcom BCM2711\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"CPU\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"ARM1176JZF-S\\nSingle-core\\n32-bit\\n@ 1Ghz\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Cortex-A53\\nQuad-core\\n64-bit\\n@ 1.4GHz\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Cortex-A72\\nQuad core\\n64-bit\\n@ 1.5GHz\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"ARM version\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"ARM v6\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"ARM v8\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"ARM v8\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"GPU\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Broadcom\\nVideoCore IV\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Broadcom\\nVideoCore IV\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Broadcom\\nVideoCore VI\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Hardware\\ncodecs\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"H.264, MPEG-4\\ndecode (1080p30)\\nH.264 encode\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"H.264, MPEG-4\\ndecode (1080p30)\\nH.264 encode\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"H.265\\n(4kp60 decode)\\nH.264\\n1080p30 encode\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"OpenGL\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"OpenGL ES 1.1, 2.0\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"OpenGL ES 1.1, 2.0\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"OpenGL ES 3.0\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"HDMI\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Mini\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Full-size\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Micro x 2\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"RAM\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"512Mb\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"1Gb\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"2/4/8Gb\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Network\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"802.11 b/g/n\\nlan-over-usb\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Gigabit lan\\n(max 300 Mbps),\\n2.4/5.0 802.11ac,\\n2.4/5.0 802.11ac,\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Gigabit lan,\\n2.4/5.0 802.11ac,\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"WiFi chipset\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"BCM43438\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Cypress CYW43455\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Cypress CYW43455\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Bluetooth\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"4.1, BLE\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"4.2, BLE\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"5.0, BLE\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Power\\nsupply\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"5V / 1.2A DC\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"5V / 2.5A+ DC\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"5V / 2.5A+ DC\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"USB ports\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Micro USB (power +\\nOTH), Micro USB\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"4 x USB 2.0\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"2 x USB 2.0,\\n2 x USB 3.0\"))), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"Max usb\\npower\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"not limited\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"1.2A all usb\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"colspan\": 1,\n    \"rowspan\": 1\n  }), mdx(\"p\", {\n    parentName: \"td\"\n  }, \"1.2A all usb\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"parent":{"__typename":"File","relativePath":"specifications.md"},"frontmatter":{"metaTitle":"","metaDescription":""}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/create-service","title":"Creating Service"}}},{"node":{"fields":{"slug":"/diagnostic","title":"Basic Diagnostic"}}},{"node":{"fields":{"slug":"/i2c","title":"I2C Config"}}},{"node":{"fields":{"slug":"/","title":"Introduction"}}},{"node":{"fields":{"slug":"/init","title":"Init Settings"}}},{"node":{"fields":{"slug":"/system-on-usb","title":"Booting images from usb"}}},{"node":{"fields":{"slug":"/python","title":"Python Commons"}}},{"node":{"fields":{"slug":"/specifications","title":"Latest Raspberry Pi Specifications"}}},{"node":{"fields":{"slug":"/useful-commands","title":"Useful commands"}}},{"node":{"fields":{"slug":"/wifi","title":"Wi-fi"}}}]}},"pageContext":{"id":"3b8de651-34a2-57c0-853b-81cbd03530b8"}}}